/***************     Load Library and Models   *********/
echo(false) ;
print(getSettings());

mylib := "mylib/package.mo";
if(loadFile(mylib)) then
   print ("mylib Loaded\n");
else
   print("mylib Load Failed\n");
   exit(1);
end if;

if(loadFile("plant.mo")) then
   print ("plant Loaded\n");
else
   print("plant Load Failed\n");
   exit(1);
end if;

print(checkModel(plant));  // This should pickup flattening errors

/************ Cleanup Work **********/
print("Cleaning Up Work Area\n") ;
system("rm work/*"); cd("./work");   system("pwd");


// *****  Simulation / translation ******
tEnd := 10; iniStepSize := 1  ;
count := integer(floor(tEnd / iniStepSize)) ;

setDebugFlags("infoXmlOperations");
flags :=  ""; // "-lv=LOG_NLS " ;  

/**    Dot Touch this section  else you lose diagnostics**/
print("Starting the Plant \n");
echo(true); // you need both echo and getErrorString() weird ...
simulate(plant, startTime=0, outputFormat="mat", 
         stopTime=tEnd,  // tolerance=1e-6, 
         cflags="-ffloat-store", simflags=flags) ;
getErrorString();
echo(false);
/**    Dot Touch this section  **/

// *** Check Simulation run/translation failures  ***
sVars :=  readSimulationResultVars("plant_res.mat") ; print(sVars);
if (size(sVars,1) == 0) then  // no variables then bailout
  print("simulation failed ... bailing out\n");
  exit(1);
else
   print("simulation done\n");
   print("No. of Plant Variables = " + String(size(sVars,1)) + "\n");
end if;

//   Plotting etc.
print("Plotting\n");
plot({abus.x, abus.y});
getErrorString();
