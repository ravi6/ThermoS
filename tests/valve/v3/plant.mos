/*  A simple script Template to run my Plant Model
          Author: Ravi Saripalli
	  Date:   23th Jul. 2015
*/  

/***************     Load Library and Models   *********/
echo(false);
N := 10; tEnd := 0.2; 


sim := if system("zenity --question --text Simulate?") == 0 then true else false;
//system("export ans=`zenity --list --column Option compile sim plot`");
print(getSettings()); print("\n\n****** Loading of packages etc. *****\n\n");
ThermoLib := getEnvironmentVar("THERMOS") + "/package.mo";

for f in {ThermoLib, "plant.mo"} loop
	if(loadFile(f)) then
	   print ( f + " Loaded\n");
	else
	   print(f + " Load Failed\n" + getErrorString());
	   exit(1);
	end if;
end for ;
print("\n\n****** Loading Done *****\n\n");

if (sim) then

	print("Saving Total Model in total.mo \n") ;
	saveTotalModel("total.mo",plant); // gives stand alone mo file to send out for debug reports.

	//ThermoS.Util.getInfo();  // Gives me the list of all switches in omc
	setCommandLineOptions("+d=initialization"); // pickup initialization errrors
	/************ Cleanup Work **********/
	print("Cleaning Up Work Area\n") ; system("rm work/*"); cd("./work");   system("pwd");

	flags :=  "-lv=LOG_LS,LOG_INIT,LOG_NLS  -w " ;  
	print("Starting the Plant \n");
	echo(true);
	simulate(plant, startTime=0, outputFormat="csv", 
		 stopTime=tEnd,   // tolerance=1e-3, iniStepSize=iniStepSize, 
		 simflags=flags) ;
	print(getErrorString());

	// *** Check Simulation run/translation failures  ***
	echo(true);
	system("./plant") ; // force the stupid thing to run when dummyDerivatives are Selected
	sVars :=  readSimulationResultVars("plant_res.csv") ; //print(sVars);
	if (size(sVars,1) == 0) then  // no variables then bailout
	  print("simulation failed ... bailing out\n");
	  // exit(1);
	else
	   print("simulation done\n");
	   print("No. of Plant Variables = " + String(size(sVars,1)) + "\n");
	end if;

else
       print("Skipping Simulation\n");
       cd("./work");
end if ;  // Skip simulation

//exit(1);
print("Plotting\n");

print("Plotting\n");
plot({v1.po, v1.spo},
       curveWidth=2, externalWindow=true, title = "opening");
system("sleep 2");
plot({v1.inlet.m_flow, v2.inlet.m_flow},
       curveWidth=2, externalWindow=true, title = "Flow Rate kg/s");
system("sleep 2");
plot({Node.m},
       curveWidth=2, externalWindow=true, title = "Flow Rate kg/s");
system("sleep 2");
plot({Node.Q_in},
       curveWidth=2, externalWindow=true, title = "Q_in (W)");
getErrorString();

