/*  A simple script Template to run my Plant Model
          Author: Ravi Saripalli
	  Date:   23rd Feb. 2015
       
      No need to stick user library in OpenModelica Library
     
*/  

/***************     Load Library and Models   *********/
echo(false) ;
print(getSettings());


ThermoLib := "/home/ravi/DSTO/projects/Om/ThermoS/package.mo";
if(loadFile(ThermoLib)) then
   print ("ThermoS Loaded\n");
else
   print("ThermoS Load Failed\n" + getErrorString());
   exit(1);
end if;

if(loadFile("plant.mo")) then
   print ("plant Loaded\n");
else
   print("plant Load Failed\n" + getErrorString());
   exit(1);
end if;


print(checkModel(plant));  // This should pickup flattening errors
// saveTotalModel("total.mo",plant); gives stand alone mo file to send out for debug reports.
//                                   can be compiled to see the flattening process as well???
// ThermoS.Util.getInfo();  // useful if you want to go deeper
setCommandLineOptions("+d=initialization"); // pickup initialization errrors
//setCommandLineOptions("+d=addDerAliases");  // Don't know this
//setCommandLineOptions("+d=noTearing");

/************ Cleanup Work **********/
print("Cleaning Up Work Area\n") ;
system("rm work/*"); cd("./work");   system("pwd");

// *****  Simulation / translation ******
tEnd := 2400; // iniStepSize := 1e-3  ;
// count := integer(floor(tEnd / iniStepSize)) ;

//setDebugFlags("infoXmlOperations");
flags :=  ""; // "-lv=LOG_NLS -w" ;  
//flags := flags + " -overrideFile ../init ";

/**    Dot Touch this section  else you lose diagnostics**/
print("Starting the Plant \n");
echo(true); // you need both echo and getErrorString() weird ...
simulate(plant, startTime=0, outputFormat="mat", 
         stopTime=tEnd,  // tolerance=1e-6, 
         simflags=flags) ;
         //cflags="-ffloat-store", simflags=flags) ;
getErrorString();

echo(false);
/**    Dot Touch this section  **/
// *** Check Simulation run/translation failures  ***
sVars :=  readSimulationResultVars("plant_res.mat") ; //print(sVars);
if (size(sVars,1) == 0) then  // no variables then bailout
  print("simulation failed ... bailing out\n");
  exit(1);
else
   print("simulation done\n");
   print("No. of Plant Variables = " + String(size(sVars,1)) + "\n");
end if;

/* **************************** */
t:=tEnd;
print("Plant Conditions at t=" + String(t) + "\n");
ans := ThermoS.Util.printVars("plant_res.mat", 
                          {"delp.pump", "delp.valve", "delp.heater",
                           "pump.Vdot", "pump.Ws",
                           "pump.inlet.m_flow", "pump.inlet.p",
                           "pump.outlet.p", "valve.inlet.p",
                           "valve.outlet.p", "htr.inlet.p",
                           "htr.outlet.p","tank.Q_in","htr.Q_wf" 
                          },
                          tEnd);
//   Plotting etc.
print("Plotting\n");
//getErrorString();
// Plotting Begins
plot(tank.level,
       curveWidth=2, externalWindow=true, title = "level(m)");
system("sleep 1s");
plot(tank.Tf,
       curveWidth=2, externalWindow=true, title = "Temp. (C)");
system("sleep 1s");
plot({delp.pump, delp.valve, delp.heater},
       curveWidth=2, externalWindow=true, title = "Pressure Changes (kPa)");
system("sleep 1s");
plot(pump.inlet.m_flow
       curveWidth=2, externalWindow=true, title = "Pump Flow Rate");
system("sleep 1s");
plot(pump.Ws
       curveWidth=2, externalWindow=true, title = "Pump Power (W)");
system("sleep 1s");
